# 定义Docker Compose文件版本
version: '3.8'

# 服务定义部分
services:
  # 后端服务配置
  backend:
    # 构建配置
    build: 
      context: .  # 使用当前目录作为构建上下文
      target: backend-builder  # 指定Dockerfile中的构建阶段
    # 端口映射
    ports:
      - "8000:8000"  # 将容器8000端口映射到主机8000端口
    # 数据卷挂载
    volumes:
      - ./backend:/app  # 挂载本地backend目录到容器/app
      - ./data:/data    # 挂载本地data目录到容器/data
    # 环境变量
    environment:
      - DATABASE_URL=mysql://academic:academic@db:3306/academic  # MySQL连接字符串
    # 启动命令
    command: uvicorn backend.app:app --reload --host 0.0.0.0 --port 8000  # 启动FastAPI开发服务器

  # 前端服务配置
  frontend:
    build:
      context: .  # 构建上下文
      target: frontend-builder  # 指定Dockerfile中的构建阶段
    ports:
      - "3000:3000"  # 前端开发服务器端口
    volumes:
      - ./frontend:/app  # 挂载前端代码
      - /app/node_modules  # 单独挂载node_modules避免覆盖
    environment:
      - NODE_ENV=development  # 设置为开发环境
    command: npm run dev  # 启动Vite开发服务器

  # MySQL数据库服务
  db:
    image: mysql:8.0  # 使用MySQL 8.0官方镜像
    environment:
      - MYSQL_ROOT_PASSWORD=academic  # root用户密码
      - MYSQL_DATABASE=academic  # 默认数据库名
      - MYSQL_USER=academic  # 应用用户名
      - MYSQL_PASSWORD=academic  # 应用用户密码
    volumes:
      - mysql_data:/var/lib/mysql  # 持久化MySQL数据
    ports:
      - "3306:3306"  # 数据库端口映射
    command: --default-authentication-plugin=mysql_native_password  # 使用传统密码认证

# 数据卷定义
volumes:
  mysql_data:  # MySQL数据持久化卷
  data:  # 应用数据卷